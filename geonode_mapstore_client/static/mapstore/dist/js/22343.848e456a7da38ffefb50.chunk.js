(self.webpackChunkgeonode_mapstore_client=self.webpackChunkgeonode_mapstore_client||[]).push([[22343],{894417:(t,e,r)=>{"use strict";r.d(e,{Z:()=>h});var s=r(640271),i=r(583996);function n(t,e,r){if(void 0===r&&(r={}),!0===r.final)return function(t,e){var r=n(e,t);return(r+180)%360}(t,e);var o=(0,i.c9)(t),a=(0,i.c9)(e),h=(0,s.Ht)(o[0]),c=(0,s.Ht)(a[0]),d=(0,s.Ht)(o[1]),u=(0,s.Ht)(a[1]),l=Math.sin(c-h)*Math.cos(u),f=Math.cos(d)*Math.sin(u)-Math.sin(d)*Math.cos(u)*Math.cos(c-h);return(0,s.vi)(Math.atan2(l,f))}function o(t,e,r,n){void 0===n&&(n={});var o=(0,i.c9)(t),a=(0,s.Ht)(o[0]),h=(0,s.Ht)(o[1]),c=(0,s.Ht)(r),d=(0,s.lF)(e,n.units),u=Math.asin(Math.sin(h)*Math.cos(d)+Math.cos(h)*Math.sin(d)*Math.cos(c)),l=a+Math.atan2(Math.sin(c)*Math.sin(d)*Math.cos(h),Math.cos(d)-Math.sin(h)*Math.sin(u)),f=(0,s.vi)(l),g=(0,s.vi)(u);return(0,s.xm)([f,g],n.properties)}var a=r(779928);function h(t,e,r){void 0===r&&(r={});for(var h=(0,i.wA)(t).coordinates,c=0,d=0;d<h.length&&!(e>=c&&d===h.length-1);d++){if(c>=e){var u=e-c;if(u){var l=n(h[d],h[d-1])-180;return o(h[d],u,l,r)}return(0,s.xm)(h[d])}c+=(0,a.Z)(h[d],h[d+1],r)}return(0,s.xm)(h[h.length-1])}},779928:(t,e,r)=>{"use strict";r.d(e,{Z:()=>n});var s=r(583996),i=r(640271);const n=function(t,e,r){void 0===r&&(r={});var n=(0,s.c9)(t),o=(0,s.c9)(e),a=(0,i.Ht)(o[1]-n[1]),h=(0,i.Ht)(o[0]-n[0]),c=(0,i.Ht)(n[1]),d=(0,i.Ht)(o[1]),u=Math.pow(Math.sin(a/2),2)+Math.pow(Math.sin(h/2),2)*Math.cos(c)*Math.cos(d);return(0,i.DL)(2*Math.atan2(Math.sqrt(u),Math.sqrt(1-u)),r.units)}},583996:(t,e,r)=>{"use strict";function s(t){if(!t)throw new Error("coord is required");if(!Array.isArray(t)){if("Feature"===t.type&&null!==t.geometry&&"Point"===t.geometry.type)return t.geometry.coordinates;if("Point"===t.type)return t.coordinates}if(Array.isArray(t)&&t.length>=2&&!Array.isArray(t[0])&&!Array.isArray(t[1]))return t;throw new Error("coord must be GeoJSON Point or an Array of numbers")}function i(t){if(Array.isArray(t))return t;if("Feature"===t.type){if(null!==t.geometry)return t.geometry.coordinates}else if(t.coordinates)return t.coordinates;throw new Error("coords must be GeoJSON Feature, Geometry Object or an Array")}function n(t){return"Feature"===t.type?t.geometry:t}r.d(e,{c9:()=>s,r7:()=>i,wA:()=>n}),r(640271)},664632:(t,e,r)=>{"use strict";r.d(e,{Z:()=>n});var s=r(779928),i=r(892322);function n(t,e){return void 0===e&&(e={}),(0,i.hE)(t,(function(t,r){var i=r.geometry.coordinates;return t+(0,s.Z)(i[0],i[1],e)}),0)}},869669:(t,e,r)=>{"use strict";r.d(e,{Z:()=>h});var s=r(432538),i=r(421915),n=r(438667),o=r(517882);class a extends s.ZP{constructor(t,e,r){super(),void 0!==r&&void 0===e?this.setFlatCoordinates(r,t):(e=e||0,this.setCenterAndRadius(t,e,r))}clone(){const t=new a(this.flatCoordinates.slice(),void 0,this.layout);return t.applyProperties(this),t}closestPointXY(t,e,r,s){const i=this.flatCoordinates,n=t-i[0],o=e-i[1],a=n*n+o*o;if(a<s){if(0===a)for(let t=0;t<this.stride;++t)r[t]=i[t];else{const t=this.getRadius()/Math.sqrt(a);r[0]=i[0]+t*n,r[1]=i[1]+t*o;for(let t=2;t<this.stride;++t)r[t]=i[t]}return r.length=this.stride,a}return s}containsXY(t,e){const r=this.flatCoordinates,s=t-r[0],i=e-r[1];return s*s+i*i<=this.getRadiusSquared_()}getCenter(){return this.flatCoordinates.slice(0,this.stride)}computeExtent(t){const e=this.flatCoordinates,r=e[this.stride]-e[0];return(0,i.T9)(e[0]-r,e[1]-r,e[0]+r,e[1]+r,t)}getRadius(){return Math.sqrt(this.getRadiusSquared_())}getRadiusSquared_(){const t=this.flatCoordinates[this.stride]-this.flatCoordinates[0],e=this.flatCoordinates[this.stride+1]-this.flatCoordinates[1];return t*t+e*e}getType(){return"Circle"}intersectsExtent(t){const e=this.getExtent();if((0,i.kK)(t,e)){const e=this.getCenter();return t[0]<=e[0]&&t[2]>=e[0]||t[1]<=e[1]&&t[3]>=e[1]||(0,i.H6)(t,this.intersectsCoordinate.bind(this))}return!1}setCenter(t){const e=this.stride,r=this.flatCoordinates[e]-this.flatCoordinates[0],s=t.slice();s[e]=s[0]+r;for(let r=1;r<e;++r)s[e+r]=t[r];this.setFlatCoordinates(this.layout,s),this.changed()}setCenterAndRadius(t,e,r){this.setLayout(r,t,0),this.flatCoordinates||(this.flatCoordinates=[]);const s=this.flatCoordinates;let i=(0,n.IG)(s,0,t,this.stride);s[i++]=s[0]+e;for(let t=1,e=this.stride;t<e;++t)s[i++]=s[t];s.length=i,this.changed()}getCoordinates(){return null}setCoordinates(t,e){}setRadius(t){this.flatCoordinates[this.stride]=this.flatCoordinates[0]+t,this.changed()}rotate(t,e){const r=this.getCenter(),s=this.getStride();this.setCenter((0,o.U1)(r,0,r.length,s,t,e,r)),this.changed()}}a.prototype.transform;const h=a},435415:(t,e,r)=>{"use strict";r.d(e,{Pt:()=>h,u3:()=>c});var s=r(576798),i=r(591358),n=r(782359),o=r(243631),a=r(218672);function h(t,e){const r=t.canvas,o=(e=e||{}).pixelRatio||i.MP,a=e.size;a&&(r.width=a[0]*o,r.height=a[1]*o,r.style.width=a[0]+"px",r.style.height=a[1]+"px");const h=[0,0,r.width,r.height],c=(0,n.bA)((0,n.Ue)(),o,o);return new s.Z(t,o,h,c,0)}function c(t){if(!(t.context instanceof CanvasRenderingContext2D))throw new Error("Only works for render events from Canvas 2D layers");const e=t.inversePixelTransform[0],r=t.inversePixelTransform[1],i=Math.sqrt(e*e+r*r),h=t.frameState,c=(0,n.Jp)(t.inversePixelTransform.slice(),h.coordinateToPixelTransform),d=(0,o.se)(h.viewState.resolution,i);let u;const l=(0,a.Cs)();return l&&(u=(0,a.WO)(l,h.viewState.projection)),new s.Z(t.context,i,h.extent,c,h.viewState.rotation,d,u)}}}]);