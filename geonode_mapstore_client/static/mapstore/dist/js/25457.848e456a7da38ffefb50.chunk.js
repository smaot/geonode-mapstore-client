(self.webpackChunkgeonode_mapstore_client=self.webpackChunkgeonode_mapstore_client||[]).push([[25457,84035,888],{584121:(e,t,r)=>{"use strict";function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}function i(e,t,r){return i=function(e,t){if("object"!=n(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var i=r.call(e,"string");if("object"!=n(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(t),(t="symbol"==n(i)?i:i+"")in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e;var i}r.d(t,{Z:()=>i})},887157:(e,t,r)=>{var n=r(640554),i=r(588958);e.exports=function(e,t,r,o){var s=e.length;for((r=n(r))<0&&(r=-r>s?0:s+r),(o=void 0===o||o>s?s:n(o))<0&&(o+=s),o=r>o?0:i(o);r<o;)e[r++]=t;return e}},580760:(e,t,r)=>{var n=r(989881);e.exports=function(e,t){var r=[];return n(e,(function(e,n,i){t(e,n,i)&&r.push(e)})),r}},441761:(e,t,r)=>{var n=r(644239),i=r(637005);e.exports=function(e){return i(e)&&"[object Date]"==n(e)}},819873:(e,t,r)=>{var n=r(887157),i=r(816612);e.exports=function(e,t,r,o){var s=null==e?0:e.length;return s?(r&&"number"!=typeof r&&i(e,t,r)&&(r=0,o=s),n(e,t,r,o)):[]}},763105:(e,t,r)=>{var n=r(234963),i=r(580760),o=r(267206),s=r(701469);e.exports=function(e,t){return(s(e)?n:i)(e,o(t,3))}},647960:(e,t,r)=>{var n=r(441761),i=r(307518),o=r(531167),s=o&&o.isDate,l=s?i(s):n;e.exports=l},313880:(e,t,r)=>{var n=r(479833);e.exports=function(){var e=arguments,t=n(e[0]);return e.length<3?t:t.replace(e[1],e[2])}},588958:(e,t,r)=>{var n=r(829750),i=r(640554);e.exports=function(e){return e?n(i(e),0,4294967295):0}},623068:(e,t,r)=>{"use strict";r.d(t,{Z:()=>a});var n=r(558493),i=r(173381),o=r(438906),s=r(613002);class l extends n.Z{constructor(e){if(super(),this.on,this.once,this.un,this.id_=void 0,this.geometryName_="geometry",this.style_=null,this.styleFunction_=void 0,this.geometryChangeKey_=null,this.addChangeListener(this.geometryName_,this.handleGeometryChanged_),e)if("function"==typeof e.getSimplifiedGeometry){const t=e;this.setGeometry(t)}else{const t=e;this.setProperties(t)}}clone(){const e=new l(this.hasProperties()?this.getProperties():null);e.setGeometryName(this.getGeometryName());const t=this.getGeometry();t&&e.setGeometry(t.clone());const r=this.getStyle();return r&&e.setStyle(r),e}getGeometry(){return this.get(this.geometryName_)}getId(){return this.id_}getGeometryName(){return this.geometryName_}getStyle(){return this.style_}getStyleFunction(){return this.styleFunction_}handleGeometryChange_(){this.changed()}handleGeometryChanged_(){this.geometryChangeKey_&&((0,s.bN)(this.geometryChangeKey_),this.geometryChangeKey_=null);const e=this.getGeometry();e&&(this.geometryChangeKey_=(0,s.oL)(e,i.Z.CHANGE,this.handleGeometryChange_,this)),this.changed()}setGeometry(e){this.set(this.geometryName_,e)}setStyle(e){this.style_=e,this.styleFunction_=e?function(e){if("function"==typeof e)return e;let t;return Array.isArray(e)?t=e:((0,o.h)("function"==typeof e.getZIndex,41),t=[e]),function(){return t}}(e):void 0,this.changed()}setId(e){this.id_=e,this.changed()}setGeometryName(e){this.removeChangeListener(this.geometryName_,this.handleGeometryChanged_),this.geometryName_=e,this.addChangeListener(this.geometryName_,this.handleGeometryChanged_),this.handleGeometryChanged_()}}const a=l},798090:(e,t,r)=>{"use strict";r.d(t,{Z:()=>u});var n=r(173381),i=r(208204),o=r(421915),s=r(613002);class l extends i.Z{constructor(e){super(),this.geometries_=e||null,this.changeEventsKeys_=[],this.listenGeometriesChange_()}unlistenGeometriesChange_(){this.changeEventsKeys_.forEach(s.bN),this.changeEventsKeys_.length=0}listenGeometriesChange_(){if(this.geometries_)for(let e=0,t=this.geometries_.length;e<t;++e)this.changeEventsKeys_.push((0,s.oL)(this.geometries_[e],n.Z.CHANGE,this.changed,this))}clone(){const e=new l(null);return e.setGeometries(this.geometries_),e.applyProperties(this),e}closestPointXY(e,t,r,n){if(n<(0,o.qf)(this.getExtent(),e,t))return n;const i=this.geometries_;for(let o=0,s=i.length;o<s;++o)n=i[o].closestPointXY(e,t,r,n);return n}containsXY(e,t){const r=this.geometries_;for(let n=0,i=r.length;n<i;++n)if(r[n].containsXY(e,t))return!0;return!1}computeExtent(e){(0,o.YN)(e);const t=this.geometries_;for(let r=0,n=t.length;r<n;++r)(0,o.l7)(e,t[r].getExtent());return e}getGeometries(){return a(this.geometries_)}getGeometriesArray(){return this.geometries_}getGeometriesArrayRecursive(){let e=[];const t=this.geometries_;for(let r=0,n=t.length;r<n;++r)t[r].getType()===this.getType()?e=e.concat(t[r].getGeometriesArrayRecursive()):e.push(t[r]);return e}getSimplifiedGeometry(e){if(this.simplifiedGeometryRevision!==this.getRevision()&&(this.simplifiedGeometryMaxMinSquaredTolerance=0,this.simplifiedGeometryRevision=this.getRevision()),e<0||0!==this.simplifiedGeometryMaxMinSquaredTolerance&&e<this.simplifiedGeometryMaxMinSquaredTolerance)return this;const t=[],r=this.geometries_;let n=!1;for(let i=0,o=r.length;i<o;++i){const o=r[i],s=o.getSimplifiedGeometry(e);t.push(s),s!==o&&(n=!0)}if(n){const e=new l(null);return e.setGeometriesArray(t),e}return this.simplifiedGeometryMaxMinSquaredTolerance=e,this}getType(){return"GeometryCollection"}intersectsExtent(e){const t=this.geometries_;for(let r=0,n=t.length;r<n;++r)if(t[r].intersectsExtent(e))return!0;return!1}isEmpty(){return 0===this.geometries_.length}rotate(e,t){const r=this.geometries_;for(let n=0,i=r.length;n<i;++n)r[n].rotate(e,t);this.changed()}scale(e,t,r){r||(r=(0,o.qg)(this.getExtent()));const n=this.geometries_;for(let i=0,o=n.length;i<o;++i)n[i].scale(e,t,r);this.changed()}setGeometries(e){this.setGeometriesArray(a(e))}setGeometriesArray(e){this.unlistenGeometriesChange_(),this.geometries_=e,this.listenGeometriesChange_(),this.changed()}applyTransform(e){const t=this.geometries_;for(let r=0,n=t.length;r<n;++r)t[r].applyTransform(e);this.changed()}translate(e,t){const r=this.geometries_;for(let n=0,i=r.length;n<i;++n)r[n].translate(e,t);this.changed()}disposeInternal(){this.unlistenGeometriesChange_(),super.disposeInternal()}}function a(e){const t=[];for(let r=0,n=e.length;r<n;++r)t.push(e[r].clone());return t}const u=l},819081:(e,t,r)=>{"use strict";e.exports=r(1174)},748759:(e,t,r)=>{"use strict";r.d(t,{df:()=>v,YD:()=>_});var n=r(722122),i=r(419756),o=r(663349),s=r(393552),l=r(584121),a=r(124852),u=r(441143),h=r.n(u),c=new Map,g=new Map,p=new Map,f=0;function m(e,t,r){void 0===r&&(r={}),r.threshold||(r.threshold=0);var n=r,i=n.root,o=n.rootMargin,s=n.threshold;if(h()(!c.has(e),"react-intersection-observer: Trying to observe %s, but it's already being observed by another instance.\nMake sure the `ref` is only used by a single <Observer /> instance.\n\n%s",e),e){var l=function(e){return e?p.has(e)?p.get(e):(f+=1,p.set(e,f.toString()),p.get(e)+"_"):""}(i)+(o?s.toString()+"_"+o:s.toString()),a=g.get(l);a||(a=new IntersectionObserver(d,r),l&&g.set(l,a));var u={callback:t,element:e,inView:!1,observerId:l,observer:a,thresholds:a.thresholds||(Array.isArray(s)?s:[s])};return c.set(e,u),a.observe(e),u}}function y(e){if(e){var t=c.get(e);if(t){var r=t.observerId,n=t.observer,i=n.root;n.unobserve(e);var o=!1,s=!1;r&&c.forEach((function(t,n){n!==e&&(t.observerId===r&&(o=!0,s=!0),t.observer.root===i&&(s=!0))})),!s&&i&&p.delete(i),n&&!o&&n.disconnect(),c.delete(e)}}}function d(e){e.forEach((function(e){var t=e.isIntersecting,r=e.intersectionRatio,n=e.target,i=c.get(n);if(i&&r>=0){var o=i.thresholds.some((function(e){return i.inView?r>e:r>=e}));void 0!==t&&(o=o&&t),i.inView=o,i.callback(o,e)}}))}var v=function(e){function t(){for(var t,r=arguments.length,n=new Array(r),i=0;i<r;i++)n[i]=arguments[i];return t=e.call.apply(e,[this].concat(n))||this,(0,l.Z)((0,o.Z)(t),"state",{inView:!1,entry:void 0}),(0,l.Z)((0,o.Z)(t),"node",null),(0,l.Z)((0,o.Z)(t),"handleNode",(function(e){t.node&&y(t.node),t.node=e||null,t.observeNode()})),(0,l.Z)((0,o.Z)(t),"handleChange",(function(e,r){(e!==t.state.inView||e)&&t.setState({inView:e,entry:r}),t.props.onChange&&t.props.onChange(e,r)})),t}(0,s.Z)(t,e);var r=t.prototype;return r.componentDidMount=function(){},r.componentDidUpdate=function(e,t){e.rootMargin===this.props.rootMargin&&e.root===this.props.root&&e.threshold===this.props.threshold||(y(this.node),this.observeNode()),t.inView!==this.state.inView&&this.state.inView&&this.props.triggerOnce&&(y(this.node),this.node=null)},r.componentWillUnmount=function(){this.node&&(y(this.node),this.node=null)},r.observeNode=function(){if(this.node){var e=this.props,t=e.threshold,r=e.root,n=e.rootMargin;m(this.node,this.handleChange,{threshold:t,root:r,rootMargin:n})}},r.render=function(){var e=this.state,t=e.inView,r=e.entry;if(!function(e){return"function"!=typeof e.children}(this.props))return this.props.children({inView:t,entry:r,ref:this.handleNode});var o=this.props,s=o.children,l=o.as,u=o.tag,h=(o.triggerOnce,o.threshold,o.root,o.rootMargin,(0,i.Z)(o,["children","as","tag","triggerOnce","threshold","root","rootMargin"]));return(0,a.createElement)(l||u||"div",(0,n.Z)({ref:this.handleNode},h),s)},t}(a.Component);function _(e){void 0===e&&(e={});var t=(0,a.useRef)(),r=(0,a.useState)({inView:!1,entry:void 0}),n=r[0],i=r[1],o=(0,a.useCallback)((function(r){t.current&&y(t.current),r&&m(r,(function(t,n){i({inView:t,entry:n}),t&&e.triggerOnce&&y(r)}),e),t.current=r}),[e.threshold,e.root,e.rootMargin,e.triggerOnce]);return(0,a.useDebugValue)(n.inView),[o,n.inView,n.entry]}(0,l.Z)(v,"displayName","InView"),(0,l.Z)(v,"defaultProps",{threshold:0,triggerOnce:!1})},41545:e=>{e.exports=n,e.exports.parse=n,e.exports.stringify=function e(t){function r(e){return e.join(" ")}function n(e){return e.map(r).join(", ")}function i(e){return e.map(n).map(o).join(", ")}function o(e){return"("+e+")"}switch("Feature"===t.type&&(t=t.geometry),t.type){case"Point":return"POINT ("+r(t.coordinates)+")";case"LineString":return"LINESTRING ("+n(t.coordinates)+")";case"Polygon":return"POLYGON ("+i(t.coordinates)+")";case"MultiPoint":return"MULTIPOINT ("+n(t.coordinates)+")";case"MultiPolygon":return"MULTIPOLYGON ("+t.coordinates.map(i).map(o).join(", ")+")";case"MultiLineString":return"MULTILINESTRING ("+i(t.coordinates)+")";case"GeometryCollection":return"GEOMETRYCOLLECTION ("+t.geometries.map(e).join(", ")+")";default:throw new Error("stringify requires a valid GeoJSON Feature or geometry object as input")}};var t=/[-+]?([0-9]*\.[0-9]+|[0-9]+)([eE][-+]?[0-9]+)?/,r=new RegExp("^"+t.source+"(\\s"+t.source+"){1,}");function n(e){var t,n=e.split(";"),i=n.pop(),o=(n.shift()||"").split("=").pop(),s=0;function l(e){var t=i.substring(s).match(e);return t?(s+=t[0].length,t[0]):null}function a(){l(/^\s*/)}function u(){a();for(var e,t=0,n=[],i=[n],o=n;e=l(/^(\()/)||l(/^(\))/)||l(/^(,)/)||l(r);){if("("===e)i.push(o),o=[],i[i.length-1].push(o),t++;else if(")"===e){if(0===o.length)return null;if(!(o=i.pop()))return null;if(0==--t)break}else if(","===e)o=[],i[i.length-1].push(o);else{if(e.split(/\s/g).some(isNaN))return null;Array.prototype.push.apply(o,e.split(/\s/g).map(parseFloat))}a()}return 0!==t?null:n}function h(){for(var e,t,n=[];t=l(r)||l(/^(,)/);)","===t?(n.push(e),e=[]):t.split(/\s/g).some(isNaN)||(e||(e=[]),Array.prototype.push.apply(e,t.split(/\s/g).map(parseFloat))),a();return e?(n.push(e),n.length?n:null):null}return(t=function e(){return function(){if(!l(/^(point(\sz)?)/i))return null;if(a(),!l(/^(\()/))return null;var e=h();return e?(a(),l(/^(\))/)?{type:"Point",coordinates:e[0]}:null):null}()||function(){if(!l(/^(linestring(\sz)?)/i))return null;if(a(),!l(/^(\()/))return null;var e=h();return e&&l(/^(\))/)?{type:"LineString",coordinates:e}:null}()||function(){if(!l(/^(polygon(\sz)?)/i))return null;a();var e=u();return e?{type:"Polygon",coordinates:e}:null}()||function(){if(!l(/^(multipoint)/i))return null;a();var e=i.substring(i.indexOf("(")+1,i.length-1).replace(/\(/g,"").replace(/\)/g,"");i="MULTIPOINT ("+e+")";var t=u();return t?(a(),{type:"MultiPoint",coordinates:t}):null}()||function(){if(!l(/^(multilinestring)/i))return null;a();var e=u();return e?(a(),{type:"MultiLineString",coordinates:e}):null}()||function(){if(!l(/^(multipolygon)/i))return null;a();var e=u();return e?{type:"MultiPolygon",coordinates:e}:null}()||function(){var t,r=[];if(!l(/^(geometrycollection)/i))return null;if(a(),!l(/^(\()/))return null;for(;t=e();)r.push(t),a(),l(/^(,)/),a();return l(/^(\))/)?{type:"GeometryCollection",geometries:r}:null}()}())&&o.match(/\d+/)&&(t.crs={type:"name",properties:{name:"urn:ogc:def:crs:EPSG::"+o}}),t}}}]);